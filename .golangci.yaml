run:
  # The default concurrency value is the number of available CPU.
  concurrency: 8
  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 5m
  tests: false
linters:
  disable-all: true
  enable: # please keep this alphabetized
    # Don't use soon to deprecated[1] linters that lead to false
    # https://github.com/golangci/golangci-lint/issues/1841
    - bodyclose
    - dogsled
    - dupl
    - errcheck
    - exportloopref
    - exhaustive
    - goconst
    - gocritic
    - gofmt
    - mnd
    - gocyclo
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - nolintlint
    - nakedret
    - prealloc
    - predeclared
    - revive
    - staticcheck
    - stylecheck
    - thelper
    - tparallel
    - unconvert
    - unparam
    - whitespace
    - wsl
    # - unused

linters-settings: # please keep this alphabetized
  revive:
    ignore-generated-header: true
    severity: error
    confidence: 0.8
    errorCode: 2
    warningCode: 0
    rules:
      - name: atomic
        severity: warning
      - name: package-comments
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
        severity: warning
        arguments:
          - disableStutteringCheck
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: argument-limit
        arguments:
          - 6
      - name: function-result-limit
        arguments:
          - 3
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: unnecessary-stmt
      - name: struct-tag
      - name: atomic
      - name: empty-lines
      - name: duplicated-imports
      - name: import-shadowing
      - name: confusing-results
      - name: modifies-parameter
      - name: redefines-builtin-id

  staticcheck:
    checks:
      - "all"

  lll:
    line-length: 120
  gocyclo:
    # Minimal code complexity to report.
    # Default: 30 (but we recommend 10)
    min-complexity: 8

issues:
  # Which dirs to skip: issues from them won't be reported.
  exclude-dirs:
    - test
    - third_party
  # Which files to skip: they will be analyzed, but issues from them won't be reported.
  exclude-files:
    - _test.go
    - _mock.go
    - ".*\\.pb\\.go"
    - ".*\\.gen\\.go"
  # List of regexps of issue texts to exclude.
  include:
    - EXC0012  # EXC0012 revive: exported (.+) should have comment( \(or a comment on this block\))? or be unexported
    - EXC0014  # EXC0014 revive: comment on exported (.+) should be of the form "(.+)..."
    - EXC0015  # EXC0015 revive: should have a package comment
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude `lll` issues for long lines with `go:generate`.
    - linters:
        - lll
      source: "^//go:generate "
  # Fix found issues (if it's supported by the linter).
  fix: true
# output configuration options
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.json,colored-line-number"
  #
  # Default: colored-line-number
  formats: colored-line-number
  # Print lines of code with issue.
  # Default: true
  print-issued-lines: false
  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: true
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: true
  # Add a prefix to the output file references.
  # Default is no prefix.
  path-prefix: ""
  # Sort results by: filepath, line and column.
  sort-results: true

severity:
  # Set the default severity for issues.
  #
  # If severity rules are defined and the issues do not match or no severity is provided to the rule
  # this will be the default severity applied.
  # Severities should match the supported severity names of the selected out format.
  # - Code climate: https://docs.codeclimate.com/docs/issues#issue-severity
  # - Checkstyle: https://checkstyle.sourceforge.io/property_types.html#SeverityLevel
  # - GitHub: https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message
  #
  # Default value is an empty string.
  default-severity: error
  # If set to true `severity-rules` regular expressions become case-sensitive.
  # Default: false
  case-sensitive: true
  # When a list of severity rules are provided, severity information will be added to lint issues.
  # Severity rules have the same filtering capability as exclude rules
  # except you are allowed to specify one matcher per severity rule.
  # Only affects out formats that support setting severity information.
  #
  # Default: []
  rules:
    - linters:
        - revive
      severity: error